---
- name: "Check for valid node type"
  fail:
    msg: "Invalid node type configured, can only be 'meta' or 'data'"
  when: influx_node_type not in influx_node_types
  tags: 'influxdb'

- name: "{{ influx_node_type }} : {{ ansible_os_family }} : Install packages"
  apt:
      deb: "{{ influx_pkg_base_url }}/influxdb-{{ influx_node_type }}_{{ influx_version}}_amd64.deb"
      state: 'present'
  when: ansible_os_family == 'Debian'
  tags: ['influxdb', 'influxdb-install', "{{ influx_node_type }}"]

- name: "{{influx_node_type}} : {{ ansible_os_family }} : Install packages"
  yum:
    name: "{{ influx_pkg_base_url }}/influxdb-{{ influx_node_type }}_{{ influx_version}}.x86_64.rpm"
    state: 'present'
  when: ansible_os_family == 'RedHat'
  tags: ['influxdb', 'influxdb-install', "{{ influx_node_type }}"]

- name: "{{ influx_node_type }} : Create configuration directory path"
  file:
    path: "{{ influx_configuration_dir }}"
    state: 'directory'
  when: influx_manage_config
  tags: ['influxdb', 'influxdb-config', "{{ influx_node_type }}"]

- name: "{{ influx_node_type }} : Build and install configuration file"
  template:
    src: "influxdb-{{ influx_node_type }}.conf.j2"
    dest: "{{ influx_configuration_dir }}/{{ influx_config_filenames[influx_node_type] }}"
    force: 'yes'
    backup: 'yes'
    owner: 'influxdb'
    group: 'influxdb'
    mode: 0744
  notify: "restart influxdb-{{ influx_node_type }}"
  when: influx_manage_config
  tags: ['influxdb', 'influxdb-config', "{{ influx_node_type }}"]

- name: "{{ influx_node_type }} : Build and install license file"
  copy:
    dest: "{{ influx_enterprise_license_path }}"
    content: "{{ influx_enterprise_license}}"
    force: 'yes'
    backup: 'yes'
    owner: 'influxdb'
    group: 'influxdb'
    mode: 0744
  notify: "restart influxdb-{{ influx_node_type }}"
  when: influx_enterprise_license != ""
  tags: ['influxdb', 'influxdb-config', "{{ influx_node_type }}"]

- name: "{{ influx_node_type }} : Start and enable the service"
  service:
    name: "{{ influx_svc_names[influx_node_type] }}"
    state: 'started'
    enabled: 'yes'
  tags: ['influxdb', 'influxdb-service', "{{ influx_node_type }}"]


- name: "{{ influx_node_type }} : Get list of nodes in the cluster"
  # TODO: Support for admin user authentication
  uri:
    body_format: 'json'
    url: "{{ influx_meta_https_enabled | ternary('https', 'http') }}://0.0.0.0:{{ influx_meta_http_bind_port}}/show-cluster"
    user: "{{ influx_data_admin_username | default(omit) }}"
    password: "{{ influx_data_admin_password | default(omit) }}"
  delegate_to: "{{ influx_meta_cluster_leader }}"
  when:
    - influx_cluster_auto_join
    - influx_meta_cluster_leader is defined
  register: influx_cluster_state
  changed_when: false
  tags: ['influxdb', 'influxdb-cluster', "{{ influx_node_type }}"]

- name: "{{ influx_node_type }} : Add node to cluster"
  command: "influxd-ctl add-{{ influx_node_type }} {{ ansible_hostname }}:{{ (influx_node_type == 'meta') | ternary(influx_meta_http_bind_port, influx_data_bind_port) }}"
  delegate_to: "{{ influx_meta_cluster_leader }}"
  when:
    - influx_cluster_auto_join
    - influx_meta_cluster_leader is defined
    - ansible_hostname not in influx_cluster_state.json[influx_node_type]|map(attribute='tcpAddr')|join
  tags: ['influxdb', 'influxdb-cluster', "{{ influx_node_type }}"]

- name: "{{ influx_node_type }}: Creating users and assigning privileges"
  uri:
    url: 'http://localhost:8091/user'
    method: 'POST'
    body:
      action: "create"
      user:
        name: "{{ item.username }}"
        password: "{{ item.password }}"
        permissions: "{{ item.permissions }}"
    status_code: 200
    body_format: 'json'
    follow_redirects: 'all'
  with_items: "{{ influx_users }}"
  tags: ['influxdb', 'infuxdb-users', 'influxdb-perms', "{{ influx_node_type }}"]
  run_once: true
  ignore_errors: true
  changed_when: false
  no_log: true

- name: "{{ influx_node_type }}: Running queries"
  uri:
    url: "http://localhost:8086/query?q={{ item | urlencode }}"
    method: 'POST'
    user: "{{ influx_data_admin_username | default(omit) }}"
    password: "{{ influx_data_admin_password | default(omit) }}"
    status_code: 200
  with_items: "{{ influx_queries }}"
  tags: ['influxdb', 'influxdb-cluster', "{{ influx_node_type }}"]
  changed_when: false
  when: influx_node_type == 'data'
